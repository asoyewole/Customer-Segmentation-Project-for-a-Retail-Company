START TIME:Sat 30 Mar 2024 04:58:51 AM CDT
password removed successfully
COPY 541909
retail_staging table loaded successfully at Sat 30 Mar 2024 04:59:12 AM CDT
INSERT 0 541909
customer_dim table loaded successfully :Sat 30 Mar 2024 04:59:22 AM CDT
\\ START TIME:Wed 03 Apr 2024 11:36:26 AM CDT
password removed successfully
-- The sql script was written (and tested) to load the postgreSQL tables in the retailDB database.
BEGIN;
BEGIN
-- Load the customer_dim table with data from staging table-No transformation
INSERT INTO public.customer_dim (
			customer_id,
			first_name,
			last_name,
			phone,
			email,
			address,
			country
			)
	(SELECT r.customerid, 
			r.firstname,
			r.lastname,
			r.phone, 
			r.email, 
			r.address, 
			r.country
	FROM public.retail_staging as r
	);
	
-- Load stock_dim table with stock_id and description alone
INSERT INTO public.stock_dim (
		stock_id,
		description
		)
	(SELECT r.stockcode,
			r.description
	 FROM public.retail_staging AS r
	 );
-- Generate random data for available units column
UPDATE public.stock_dim 
	SET available_units = 
	floor(random() * (10000 - 10 + 1) + 10);
	
-- Change datestyle
SET DATESTYLE = mdy; 
	
	
-- Insert into sales measure
INSERT INTO public.sales_measure(
		invoice_number,
		"quantity purchased",
		invoice_date,
		unit_price
	)
	(SELECT r.invoiceno, 
	 CAST (r.quantity AS integer), 
	 CAST (r.invoicedate AS timestamp), 
	 CAST (r.unitprice AS numeric) 
	 FROM public.retail_staging AS r
	);
	COMMIT;
ROLLBACK
END;
COMMIT
SCIPT ENDS:Wed 03 Apr 2024 11:36:37 AM CDT
\\ START TIME:Wed 03 Apr 2024 11:40:55 AM CDT
password removed successfully
-- The sql script was written (and tested) to load the postgreSQL tables in the retailDB database.
BEGIN;
BEGIN
-- Load the customer_dim table with data from staging table-No transformation
INSERT INTO public.customer_dim (
			customer_id,
			first_name,
			last_name,
			phone,
			email,
			address,
			country
			)
	(SELECT r.customerid, 
			r.firstname,
			r.lastname,
			r.phone, 
			r.email, 
			r.address, 
			r.country
	FROM public.retail_staging as r
	);
	
-- Load stock_dim table with stock_id and description alone
INSERT INTO public.stock_dim (
		stock_id,
		description
		)
	(SELECT r.stockcode,
			r.description
	 FROM public.retail_staging AS r
	 );
-- Generate random data for available units column
UPDATE public.stock_dim 
	SET available_units = 
	floor(random() * (10000 - 10 + 1) + 10);
	
-- Change datestyle
SET DATESTYLE = mdy; 
	
	
-- Insert into sales measure
INSERT INTO public.sales_measure(
		invoice_number,
		"quantity purchased",
		invoice_date,
		unit_price
	)
	(SELECT r.invoiceno, 
	 CAST (r.quantity AS integer), 
	 CAST (r.invoicedate AS timestamp), 
	 CAST (r.unitprice AS numeric) 
	 FROM public.retail_staging AS r
	);
	COMMIT;
ROLLBACK
END;
COMMIT
SCIPT ENDS:Wed 03 Apr 2024 11:41:06 AM CDT
\\ START TIME:Wed 03 Apr 2024 11:41:53 AM CDT
password removed successfully
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;
BEGIN
CREATE TABLE IF NOT EXISTS public.customer_dim
(
    customer_key serial NOT NULL,
    customer_id character varying,
    first_name character varying,
    last_name character varying,
    phone character varying,
    email character varying,
    address character varying,
    country character varying,
    PRIMARY KEY (customer_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.stock_dim
(
    stock_key serial NOT NULL,
    stock_id character varying,
    description character varying,
    available_units integer,
    PRIMARY KEY (stock_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.sales_measure
(
    sales_id serial NOT NULL,
    invoice_number character varying,
    "quantity purchased" integer,
    invoice_date timestamp without time zone[],
    unit_price numeric
);
CREATE TABLE
COMMENT ON COLUMN public.sales_measure.invoice_number
    IS 'invoice number is included under the sales measure rather than creating a seperate invoice dimension. This is because there are limited information about the invoice on our source document. A seperate invoice dimension will not lend positive credence to this analysis.';
COMMENT
CREATE TABLE IF NOT EXISTS public.retail_staging
(
    "invoiceNo" character varying,
    stockcode character varying,
    description character varying,
    quantity character varying,
    invoicedate character varying,
    unitprice character varying,
    customerid character varying,
    country character varying,
    firstname character varying,
    lastname character varying,
    address character varying,
    phone character varying,
    email character varying
);
CREATE TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_cust_rel FOREIGN KEY (sales_id)
    REFERENCES public.customer_dim (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_stock_rel FOREIGN KEY (sales_id)
    REFERENCES public.stock_dim (stock_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
END;
COMMIT
\\ START TIME:Wed 03 Apr 2024 11:44:57 AM CDT
password removed successfully
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;
BEGIN
CREATE TABLE IF NOT EXISTS public.customer_dim
(
    customer_key serial NOT NULL,
    customer_id character varying,
    first_name character varying,
    last_name character varying,
    phone character varying,
    email character varying,
    address character varying,
    country character varying,
    PRIMARY KEY (customer_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.stock_dim
(
    stock_key serial NOT NULL,
    stock_id character varying,
    description character varying,
    available_units integer,
    PRIMARY KEY (stock_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.sales_measure
(
    sales_id serial NOT NULL,
    invoice_number character varying,
    "quantity purchased" integer,
    invoice_date timestamp without time zone[],
    unit_price numeric
);
CREATE TABLE
COMMENT ON COLUMN public.sales_measure.invoice_number
    IS 'invoice number is included under the sales measure rather than creating a seperate invoice dimension. This is because there are limited information about the invoice on our source document. A seperate invoice dimension will not lend positive credence to this analysis.';
COMMENT
CREATE TABLE IF NOT EXISTS public.retail_staging
(
    "invoiceNo" character varying,
    stockcode character varying,
    description character varying,
    quantity character varying,
    invoicedate character varying,
    unitprice character varying,
    customerid character varying,
    country character varying,
    firstname character varying,
    lastname character varying,
    address character varying,
    phone character varying,
    email character varying
);
CREATE TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_cust_rel FOREIGN KEY (sales_id)
    REFERENCES public.customer_dim (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_stock_rel FOREIGN KEY (sales_id)
    REFERENCES public.stock_dim (stock_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
END;
COMMIT
COPY 541909
-- The sql script was written (and tested) to load the postgreSQL tables in the retailDB database.
BEGIN;
BEGIN
-- Load the customer_dim table with data from staging table-No transformation
INSERT INTO public.customer_dim (
			customer_id,
			first_name,
			last_name,
			phone,
			email,
			address,
			country
			)
	(SELECT r.customerid, 
			r.firstname,
			r.lastname,
			r.phone, 
			r.email, 
			r.address, 
			r.country
	FROM public.retail_staging as r
	);
INSERT 0 541909
	
-- Load stock_dim table with stock_id and description alone
INSERT INTO public.stock_dim (
		stock_id,
		description
		)
	(SELECT r.stockcode,
			r.description
	 FROM public.retail_staging AS r
	 );
INSERT 0 541909
-- Generate random data for available units column
UPDATE public.stock_dim 
	SET available_units = 
	floor(random() * (10000 - 10 + 1) + 10);
UPDATE 541909
	
-- Change datestyle
SET DATESTYLE = mdy; 
SET
	
	
-- Insert into sales measure
INSERT INTO public.sales_measure(
		invoice_number,
		"quantity purchased",
		invoice_date,
		unit_price
	)
	(SELECT r.invoiceno, 
	 CAST (r.quantity AS integer), 
	 CAST (r.invoicedate AS timestamp), 
	 CAST (r.unitprice AS numeric) 
	 FROM public.retail_staging AS r
	);
	COMMIT;
ROLLBACK
END;
COMMIT
SCIPT ENDS:Wed 03 Apr 2024 11:45:25 AM CDT
\\ START TIME:Wed 03 Apr 2024 11:51:20 AM CDT
password removed successfully
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;
BEGIN
CREATE TABLE IF NOT EXISTS public.customer_dim
(
    customer_key serial NOT NULL,
    customer_id character varying,
    first_name character varying,
    last_name character varying,
    phone character varying,
    email character varying,
    address character varying,
    country character varying,
    PRIMARY KEY (customer_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.stock_dim
(
    stock_key serial NOT NULL,
    stock_id character varying,
    description character varying,
    available_units integer,
    PRIMARY KEY (stock_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.sales_measure
(
    sales_id serial NOT NULL,
    invoice_number character varying,
    "quantity purchased" integer,
    invoice_date timestamp without time zone[],
    unit_price numeric
);
CREATE TABLE
COMMENT ON COLUMN public.sales_measure.invoice_number
    IS 'invoice number is included under the sales measure rather than creating a seperate invoice dimension. This is because there are limited information about the invoice on our source document. A seperate invoice dimension will not lend positive credence to this analysis.';
COMMENT
CREATE TABLE IF NOT EXISTS public.retail_staging
(
    invoiceNo character varying,
    stockcode character varying,
    description character varying,
    quantity character varying,
    invoicedate character varying,
    unitprice character varying,
    customerid character varying,
    country character varying,
    firstname character varying,
    lastname character varying,
    address character varying,
    phone character varying,
    email character varying
);
CREATE TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_cust_rel FOREIGN KEY (sales_id)
    REFERENCES public.customer_dim (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_stock_rel FOREIGN KEY (sales_id)
    REFERENCES public.stock_dim (stock_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
END;
COMMIT
COPY 541909
-- The sql script was written (and tested) to load the postgreSQL tables in the retailDB database.
BEGIN;
BEGIN
-- Load the customer_dim table with data from staging table-No transformation
INSERT INTO public.customer_dim (
			customer_id,
			first_name,
			last_name,
			phone,
			email,
			address,
			country
			)
	(SELECT r.customerid, 
			r.firstname,
			r.lastname,
			r.phone, 
			r.email, 
			r.address, 
			r.country
	FROM public.retail_staging as r
	);
INSERT 0 541909
	
-- Load stock_dim table with stock_id and description alone
INSERT INTO public.stock_dim (
		stock_id,
		description
		)
	(SELECT r.stockcode,
			r.description
	 FROM public.retail_staging AS r
	 );
INSERT 0 541909
-- Generate random data for available units column
UPDATE public.stock_dim 
	SET available_units = 
	floor(random() * (10000 - 10 + 1) + 10);
UPDATE 541909
	
-- Change datestyle
SET DATESTYLE = mdy; 
SET
	
	
-- Insert into sales measure
INSERT INTO public.sales_measure(
		invoice_number,
		"quantity purchased",
		invoice_date,
		unit_price
	)
	(SELECT r.invoiceno, 
	 CAST (r.quantity AS integer), 
	 CAST (r.invoicedate AS timestamp), 
	 CAST (r.unitprice AS numeric) 
	 FROM public.retail_staging AS r
	);
	COMMIT;
ROLLBACK
END;
COMMIT
SCIPT ENDS:Wed 03 Apr 2024 11:51:50 AM CDT
\\ START TIME:Wed 03 Apr 2024 11:53:45 AM CDT
password removed successfully
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;
BEGIN
CREATE TABLE IF NOT EXISTS public.customer_dim
(
    customer_key serial NOT NULL,
    customer_id character varying,
    first_name character varying,
    last_name character varying,
    phone character varying,
    email character varying,
    address character varying,
    country character varying,
    PRIMARY KEY (customer_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.stock_dim
(
    stock_key serial NOT NULL,
    stock_id character varying,
    description character varying,
    available_units integer,
    PRIMARY KEY (stock_key)
);
CREATE TABLE
CREATE TABLE IF NOT EXISTS public.sales_measure
(
    sales_id serial NOT NULL,
    invoice_number character varying,
    "quantity purchased" integer,
    invoice_date timestamp without time zone,
    unit_price numeric
);
CREATE TABLE
  
COMMENT ON COLUMN public.sales_measure.invoice_number
    IS 'invoice number is included under the sales measure rather than creating a seperate invoice dimension. This is because there are limited information about the invoice on our source document. A seperate invoice dimension will not lend positive credence to this analysis.';
COMMENT
CREATE TABLE IF NOT EXISTS public.retail_staging
(
    invoiceNo character varying,
    stockcode character varying,
    description character varying,
    quantity character varying,
    invoicedate character varying,
    unitprice character varying,
    customerid character varying,
    country character varying,
    firstname character varying,
    lastname character varying,
    address character varying,
    phone character varying,
    email character varying
);
CREATE TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_cust_rel FOREIGN KEY (sales_id)
    REFERENCES public.customer_dim (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
ALTER TABLE IF EXISTS public.sales_measure
    ADD CONSTRAINT sales_stock_rel FOREIGN KEY (sales_id)
    REFERENCES public.stock_dim (stock_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE
END;
COMMIT
COPY 541909
-- The sql script was written (and tested) to load the postgreSQL tables in the retailDB database.
BEGIN;
BEGIN
-- Load the customer_dim table with data from staging table-No transformation
INSERT INTO public.customer_dim (
			customer_id,
			first_name,
			last_name,
			phone,
			email,
			address,
			country
			)
	(SELECT r.customerid, 
			r.firstname,
			r.lastname,
			r.phone, 
			r.email, 
			r.address, 
			r.country
	FROM public.retail_staging as r
	);
INSERT 0 541909
	
-- Load stock_dim table with stock_id and description alone
INSERT INTO public.stock_dim (
		stock_id,
		description
		)
	(SELECT r.stockcode,
			r.description
	 FROM public.retail_staging AS r
	 );
INSERT 0 541909
-- Generate random data for available units column
UPDATE public.stock_dim 
	SET available_units = 
	floor(random() * (10000 - 10 + 1) + 10);
UPDATE 541909
	
-- Change datestyle
SET DATESTYLE = mdy; 
SET
	
	
-- Insert into sales measure
INSERT INTO public.sales_measure(
		invoice_number,
		"quantity purchased",
		invoice_date,
		unit_price
	)
	(SELECT r.invoiceno, 
	 CAST (r.quantity AS integer), 
	 CAST (r.invoicedate AS timestamp), 
	 CAST (r.unitprice AS numeric) 
	 FROM public.retail_staging AS r
	);
INSERT 0 541909
	COMMIT;
COMMIT
END;
COMMIT
SCIPT ENDS:Wed 03 Apr 2024 11:54:32 AM CDT
